"use strict";(self.webpackChunkng_vcl_demo=self.webpackChunkng_vcl_demo||[]).push([[520],{520:(u,t,e)=>{e.r(t),e.d(t,{SpinnerDemoModule:()=>Z,demo:()=>v});var p=e(6895),a=e(433),g=e(4629),d=e(9787),s=e(9155),n=e(4650),f=e(1435),h=e(1441),M=e(5550),C=e(2007),D=e(1300),S=e(1355);let T=(()=>{class o{constructor(){this.data1=0,this.data2=0}}return o.\u0275fac=function(i){return new(i||o)},o.\u0275cmp=n.Xpm({type:o,selectors:[["ng-component"]],decls:16,vars:6,consts:[[3,"spinner"],["vclInput","","type","number",3,"ngModel","ngModelChange"],["orientation","vertical",3,"ngModel","ngModelChange"],["orientation","Horizontal",3,"ngModel","ngModelChange"]],template:function(i,l){1&i&&(n.TgZ(0,"h3"),n._uU(1,"Vertical"),n.qZA(),n.TgZ(2,"vcl-form-control-group",0)(3,"vcl-label"),n._uU(4,"Vertical"),n.qZA(),n.TgZ(5,"vcl-input-field")(6,"input",1),n.NdJ("ngModelChange",function(r){return l.data1=r}),n.qZA(),n.TgZ(7,"vcl-spinner",2),n.NdJ("ngModelChange",function(r){return l.data1=r}),n.qZA()()(),n.TgZ(8,"h3"),n._uU(9,"Horizontal"),n.qZA(),n.TgZ(10,"vcl-form-control-group",0)(11,"vcl-label"),n._uU(12,"Horizontal"),n.qZA(),n.TgZ(13,"vcl-input-field")(14,"input",1),n.NdJ("ngModelChange",function(r){return l.data2=r}),n.qZA(),n.TgZ(15,"vcl-spinner",3),n.NdJ("ngModelChange",function(r){return l.data2=r}),n.qZA()()()),2&i&&(n.xp6(2),n.Q6J("spinner",!0),n.xp6(4),n.Q6J("ngModel",l.data1),n.xp6(1),n.Q6J("ngModel",l.data1),n.xp6(3),n.Q6J("spinner",!0),n.xp6(4),n.Q6J("ngModel",l.data2),n.xp6(1),n.Q6J("ngModel",l.data2))},dependencies:[a.Fj,a.wV,a.JJ,a.On,f.V,h.q,M.o,C.q8,D._T,S.O],encapsulation:2}),o})();function v(){return{label:"Spinner",tabs:{Demo:T,"README.md":{type:"md",content:'# vcl-spinner\n\n`vcl-spinner` is a simple spinner element with 2 buttons where one increments the provided value, the other decrements.\n\n## Usage\n\n```js\nimport { VCLSpinnerModule } from \'@vcl/ng-vcl\';\n\n@NgModule({\n  imports: [VCLSpinnerModule],\n  ...\n})\nexport class AppComponent {\n}\n```\n\n### Basic spinner\n\n```html\n<vcl-spinner [(ngModel)]="value"></vcl-spinner>\n```\n\n### Spinner inside input\n\n```html\n<vcl-form-control-group [spinner]="true">\n  <vcl-label>Sample</vcl-label>\n  <vcl-input-field>\n    <input vclInput [(ngModel)]="value" type="number"/>\n  </vcl-input-field>\n  <vcl-spinner [(ngModel)]="value"></vcl-spinner>\n</vcl-form-control-group>\n```\n\n### API\n\n#### vcl-spinner square attributes\n\n| Name                | Type           | Default  | Description\n| ------------        |----------------| -------- |------------\n| `orientation`       | \'horizontal\' \\| \'vertical\'     | \'vertical\' | Orientation the buttons are placed in\n'},"demo.component.html":{type:"html",content:e(1119)},"demo.component.ts":{type:"ts",content:e(3238)}}}}let Z=(()=>{class o{}return o.\u0275fac=function(i){return new(i||o)},o.\u0275mod=n.oAB({type:o}),o.\u0275inj=n.cJS({imports:[p.ez,a.u5,s.l,d.WdB,d.LZz,d.NhM,d.V4c,g.Bz.forChild([{path:"",component:s.z,data:{demo:v}}])]}),o})()},1119:(u,t,e)=>{e.r(t),e.d(t,{default:()=>p});const p='<h3>Vertical</h3>\n\n<vcl-form-control-group [spinner]="true">\n  <vcl-label>Vertical</vcl-label>\n  <vcl-input-field>\n    <input vclInput [(ngModel)]="data1" type="number" />\n    <vcl-spinner [(ngModel)]="data1" orientation="vertical"></vcl-spinner>\n  </vcl-input-field>\n</vcl-form-control-group>\n\n<h3>Horizontal</h3>\n\n<vcl-form-control-group [spinner]="true">\n  <vcl-label>Horizontal</vcl-label>\n  <vcl-input-field>\n    <input vclInput [(ngModel)]="data2" type="number" />\n    <vcl-spinner [(ngModel)]="data2" orientation="Horizontal"></vcl-spinner>\n  </vcl-input-field>\n</vcl-form-control-group>\n'},3238:(u,t,e)=>{e.r(t),e.d(t,{default:()=>p});const p="import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: 'demo.component.html'\n})\nexport class SpinnerDemoComponent {\n  data1 = 0;\n  data2 = 0;\n}\n"}}]);