"use strict";(self.webpackChunkng_vcl_demo=self.webpackChunkng_vcl_demo||[]).push([[448],{6448:(m,r,t)=>{t.r(r),t.d(r,{CalendarDemoModule:()=>A,demo:()=>v});var i=t(177),p=t(3339),h=t(3323),u=t(9042),e=t(4438),g=t(8070),C=t(5722);function f(l,R){if(1&l){const o=e.RV6();e.j41(0,"div",10)(1,"div",11)(2,"div",12)(3,"button",13),e.bIt("click",function(){e.eBV(o);const a=e.XpG(),d=e.sdS(33);return e.Njj(d.viewDate=a.today)}),e.EFF(4," go to today "),e.k0s(),e.j41(5,"button",14),e.bIt("click",function(){e.eBV(o),e.XpG();const a=e.sdS(33);return e.Njj(a.viewDate=a.value)}),e.EFF(6," go to selected "),e.k0s()()()()}}let D=(()=>{class l{constructor(o){this.dateAdapter=o,this.dateArray=[],this.monthArray=[],this.today=this.dateAdapter.today(),this.available=[{match:{start:this.dateAdapter.addDays(this.dateAdapter.today(),1),end:this.dateAdapter.addDays(this.dateAdapter.today(),14)},class:"available",view:"month"},{match:this.dateAdapter.always(),class:"unavailable",disabled:!0,view:"month"}]}get sdate(){return this.dateAdapter.format(this.date,"date")}get sdateRange(){return this.dateAdapter.isRange(this.dateRange)?this.dateAdapter.format(this.dateRange.start,"date")+" - "+this.dateAdapter.format(this.dateRange.end,"date"):"-"}get sdateArray(){return this.dateArray.map(o=>this.dateAdapter.format(o,"date")).join(", ")}get smonth(){return this.dateAdapter.format(this.month,"yearMonth")}get smonthRange(){return this.dateAdapter.isRange(this.monthRange)?this.dateAdapter.format(this.monthRange.start,"yearMonth")+" - "+this.dateAdapter.format(this.monthRange.end,"yearMonth"):"-"}get smonthArray(){return this.monthArray.map(o=>this.dateAdapter.format(o,"yearMonth")).join(", ")}static#e=this.\u0275fac=function(s){return new(s||l)(e.rXU(h.VeB))};static#a=this.\u0275cmp=e.VBU({type:l,selectors:[["ng-component"]],decls:35,vars:17,consts:[["c","vclCalendar"],[3,"valueChange","value"],["selectionMode","range",3,"valueChange","value"],["selectionMode","multiple",3,"valueChange","value","maxSelectableDates"],["selectionMode","month",3,"valueChange","value"],["selectionMode","month-range",3,"valueChange","value"],["selectionMode","month-multiple",3,"valueChange","value","maxSelectableDates"],[3,"disabled"],[3,"dateModifiers"],["vclCalendarFooter","","class","d-g-row",4,"ngIf"],["vclCalendarFooter","",1,"d-g-row"],[1,"d-g-cell","toolbar"],["role","menubar",1,"flex","row","justify-between","center"],["vcl-button","","type","button",1,"transparent","flex",3,"click"],["vcl-button","","square","","type","button",1,"transparent","flex",3,"click"]],template:function(s,a){if(1&s){const d=e.RV6();e.j41(0,"h3"),e.EFF(1,"Basic calendar"),e.k0s(),e.j41(2,"vcl-calendar",1),e.mxI("valueChange",function(n){return e.eBV(d),e.DH7(a.date,n)||(a.date=n),e.Njj(n)}),e.k0s(),e.EFF(3),e.j41(4,"h3"),e.EFF(5,'With selectionMode="range"'),e.k0s(),e.j41(6,"vcl-calendar",2),e.mxI("valueChange",function(n){return e.eBV(d),e.DH7(a.dateRange,n)||(a.dateRange=n),e.Njj(n)}),e.k0s(),e.EFF(7),e.j41(8,"h3"),e.EFF(9,'With selectionMode="multiple", maxSelectableDates=3'),e.k0s(),e.j41(10,"vcl-calendar",3),e.mxI("valueChange",function(n){return e.eBV(d),e.DH7(a.dateArray,n)||(a.dateArray=n),e.Njj(n)}),e.k0s(),e.EFF(11),e.j41(12,"h3"),e.EFF(13,'With selectionMode="month"'),e.k0s(),e.j41(14,"vcl-calendar",4),e.mxI("valueChange",function(n){return e.eBV(d),e.DH7(a.month,n)||(a.month=n),e.Njj(n)}),e.k0s(),e.EFF(15),e.j41(16,"h3"),e.EFF(17,'With selectionMode="month-range"'),e.k0s(),e.j41(18,"vcl-calendar",5),e.mxI("valueChange",function(n){return e.eBV(d),e.DH7(a.monthRange,n)||(a.monthRange=n),e.Njj(n)}),e.k0s(),e.EFF(19),e.j41(20,"h3"),e.EFF(21,'With selectionMode="month-multiple", maxSelectableDates=2'),e.k0s(),e.j41(22,"vcl-calendar",6),e.mxI("valueChange",function(n){return e.eBV(d),e.DH7(a.monthArray,n)||(a.monthArray=n),e.Njj(n)}),e.k0s(),e.EFF(23),e.j41(24,"h3"),e.EFF(25,"Disabled"),e.k0s(),e.nrm(26,"vcl-calendar",7),e.j41(27,"h3"),e.EFF(28,"With dateModifiers"),e.k0s(),e.nrm(29,"vcl-calendar",8),e.j41(30,"h3"),e.EFF(31,"Custom Footer"),e.k0s(),e.j41(32,"vcl-calendar",null,0),e.DNE(34,f,7,0,"div",9),e.k0s()}if(2&s){const d=e.sdS(33);e.R7$(2),e.R50("value",a.date),e.R7$(),e.SpI("\nValue: ",a.sdate," "),e.R7$(3),e.R50("value",a.dateRange),e.R7$(),e.SpI("\nValue: ",a.sdateRange," "),e.R7$(3),e.R50("value",a.dateArray),e.Y8G("maxSelectableDates",3),e.R7$(),e.SpI("\nValue: ",a.sdateArray," "),e.R7$(3),e.R50("value",a.month),e.R7$(),e.SpI("\nValue: ",a.smonth," "),e.R7$(3),e.R50("value",a.monthRange),e.R7$(),e.SpI("\nValue: ",a.smonthRange," "),e.R7$(3),e.R50("value",a.monthArray),e.Y8G("maxSelectableDates",2),e.R7$(),e.SpI("\nValue: ",a.smonthArray," "),e.R7$(3),e.Y8G("disabled",!0),e.R7$(3),e.Y8G("dateModifiers",a.available),e.R7$(5),e.Y8G("ngIf","month"===d.view)}},dependencies:[i.bT,g.Q,C.S],styles:["vcl-calendar[_ngcontent-%COMP%]{width:18em}"]})}return l})();const y="# vcl-calendar\n\nA calendar to display and select dates\n\n## Usage\n\n```js\nimport { VCLCalendarModule } from '@vcl/ng-vcl';\n\n@NgModule({\n  imports: [ VCLCalendarModule ],\n  ...\n})\nexport class AppComponent {}\n```\n\n```html\n<vcl-calendar [date]=\"date\"></vcl-calendar>\n```\n\n### Date representation\n\nThe calendar uses the `DateAdapterBase` for date representation.\nCheck the [`DateAdapterBase` docs](#/dateadapter) for further information.\n\n### selectionMode\n\nThe calendar supports a variety of selection modes. The default `selectionMode` is `date`\n\n- `date` Can select a single date\n- `range` Can select a date range with a starting and ending date (see `VCLDateRange` interface)\n- `multiple` Can select multiple dates\n- `month` Can a single month\n- `month-multiple` Can select multiple months \n- `month-range` Can select a month range with a starting and ending month (see `VCLDateRange` interface)\n\n### dateModifier\n\nA date modifier allows to customize specific days in the month calendar.\nAn array of object implementing the `VCLCalendarDateModifier` can be passed to the calendar.\n\n```html\n<vcl-calendar [dateModifiers]=\"dateModifiers\"></vcl-calendar>\n```\n\n```ts\ndateModifiers = [{\n  match: new Date(2019, 0, 1), // Matches January, 1\n  class: 'holiday', // Adds holiday css class\n  disabled: true, // Disabled date\n  view: 'month' // Limits  modifier to month view\n}]\n```\n\n#### vcl-calendar attributes\n\nName                | Type                                            | Default | Description\n---------------     | -------                                         | ------- | -----------------------------------------------\n`value`             | VCLDate \\| VCLDate[] \\| VCLDateRange<VCLDate>   |         | Selected date(s)/date range in the calendar\n`viewDate`          | VCLDate                                         | today   | The currently shown date in the calendar \n`selectionMode`     | VCLCalendarSelectionMode                        |         | See selectionMode description\n`disabled`          | boolean                                         | false   | Disables the calendar when true\n`dateModifiers`     | VCLCalendarDateModifier[]                       |         | only `month` view: See dateModifier description\n`showWeekOfTheYear` | boolean                                         | false   | only `month` view: Show of the year when true\n`maxSelectableDates`| boolean                                         |         | only for selectionMode `multiple` and `month-range`: Maximum number of selectable dates\n\n#### vcl-calendar events\nName                | Type                                              | Description\n---------------     | -------                                           | -----------------------------------------------\n`valueChange`       | VCLDate \\| VCLDate[] \\| VCLDateRange<VCLDate>     | Triggered when a new date is selected\n`viewDateChange`    | VCLDate                                           | Triggered when the viewDate changes\n\n#### vcl-calendar interfaces\n\n```ts\nexport type VCLCalendarSelectionMode = 'date' | 'multiple' | 'range' | 'month' | 'month-multiple' | 'month-range';\nexport type VCLCalendarView = 'month' | 'year' | 'years' | 'hours' | 'minutes';\n\nexport interface VCLCalendarDateModifier<VCLDate> {\n  match: VCLDate | VCLDate[] | VCLDateRange<VCLDate>;\n  class?: string;\n  disabled?: boolean;\n  view:? VCLCalendarView;\n}\n```\n";function v(){return{label:"Calendar",tabs:{Demo:D,"README.md":{type:"md",content:y},"demo.component.html":{type:"html",content:t(2505)},"demo.component.ts":{type:"ts",content:t(773)}}}}let A=(()=>{class l{static#e=this.\u0275fac=function(s){return new(s||l)};static#a=this.\u0275mod=e.$C({type:l});static#n=this.\u0275inj=e.G2t({imports:[i.MD,u.q,h.e7Q,h.I9,p.iI.forChild([{path:"",component:u.D,data:{demo:v}}])]})}return l})()},2505:(m,r,t)=>{t.r(r),t.d(r,{default:()=>i});const i='<h3>Basic calendar</h3>\n\n<vcl-calendar [(value)]="date"></vcl-calendar>\nValue: {{sdate}}\n\n<h3>With selectionMode="range"</h3>\n\n<vcl-calendar [(value)]="dateRange" selectionMode="range"></vcl-calendar>\nValue: {{sdateRange}}\n\n<h3>With selectionMode="multiple", maxSelectableDates=3</h3>\n\n<vcl-calendar [(value)]="dateArray" selectionMode="multiple" [maxSelectableDates]="3"></vcl-calendar>\nValue: {{sdateArray}}\n\n<h3>With selectionMode="month"</h3>\n\n<vcl-calendar [(value)]="month" selectionMode="month"></vcl-calendar>\nValue: {{smonth}}\n\n<h3>With selectionMode="month-range"</h3>\n\n<vcl-calendar [(value)]="monthRange" selectionMode="month-range"></vcl-calendar>\nValue: {{smonthRange}}\n\n<h3>With selectionMode="month-multiple", maxSelectableDates=2</h3>\n\n<vcl-calendar [(value)]="monthArray" selectionMode="month-multiple" [maxSelectableDates]="2"></vcl-calendar>\nValue: {{smonthArray}}\n\n<h3>Disabled</h3>\n\n<vcl-calendar [disabled]="true"></vcl-calendar>\n\n<h3>With dateModifiers</h3>\n\n<vcl-calendar [dateModifiers]="available"></vcl-calendar>\n\n<h3>Custom Footer</h3>\n\n<vcl-calendar #c="vclCalendar">\n  <div vclCalendarFooter class="d-g-row" *ngIf="c.view === \'month\'">\n    <div class="d-g-cell toolbar">\n      <div class="flex row justify-between center" role="menubar">\n        <button vcl-button class="transparent flex" type="button" (click)="c.viewDate = today">\n          go to today\n        </button>\n        <button vcl-button square class="transparent flex" type="button" (click)="c.viewDate = c.value">\n          go to selected\n        </button>\n      </div>\n    </div>\n  </div>\n</vcl-calendar>\n'},773:(m,r,t)=>{t.r(r),t.d(r,{default:()=>i});const i="import { Component } from '@angular/core';\nimport { VCLDateRange, DateAdapterBase } from '@vcl/ng-vcl';\nimport { VCLCalendarDateModifier } from '@vcl/ng-vcl';\n\n@Component({\n  templateUrl: 'demo.component.html',\n  styles: [\n    `\n      vcl-calendar {\n        width: 18em;\n      }\n    `,\n  ],\n})\nexport class CalendarDemoComponent {\n  constructor(private dateAdapter: DateAdapterBase<Date>) {}\n\n  date: Date;\n  get sdate() {\n    return this.dateAdapter.format(this.date, 'date');\n  }\n  dateRange: VCLDateRange<Date>;\n  get sdateRange() {\n    if (this.dateAdapter.isRange(this.dateRange)) {\n      return (\n        this.dateAdapter.format(this.dateRange.start, 'date') +\n        ' - ' +\n        this.dateAdapter.format(this.dateRange.end, 'date')\n      );\n    }\n    return '-';\n  }\n  dateArray: Date[] = [];\n  get sdateArray() {\n    return this.dateArray\n      .map(d => this.dateAdapter.format(d, 'date'))\n      .join(', ');\n  }\n\n  month: Date;\n  get smonth() {\n    return this.dateAdapter.format(this.month, 'yearMonth');\n  }\n  monthRange: VCLDateRange<Date>;\n  get smonthRange() {\n    if (this.dateAdapter.isRange(this.monthRange)) {\n      return (\n        this.dateAdapter.format(this.monthRange.start, 'yearMonth') +\n        ' - ' +\n        this.dateAdapter.format(this.monthRange.end, 'yearMonth')\n      );\n    }\n    return '-';\n  }\n  monthArray: Date[] = [];\n  get smonthArray() {\n    return this.monthArray\n      .map(d => this.dateAdapter.format(d, 'yearMonth'))\n      .join(', ');\n  }\n\n  today = this.dateAdapter.today();\n\n  available: VCLCalendarDateModifier<Date>[] = [\n    {\n      // Set vclAvailable class on specific range\n      match: {\n        start: this.dateAdapter.addDays(this.dateAdapter.today(), 1),\n        end: this.dateAdapter.addDays(this.dateAdapter.today(), 14),\n      },\n      class: 'available',\n      view: 'month', // Limit to month view\n    },\n    {\n      // Set vclUnavailable class and disable on specific range\n      match: this.dateAdapter.always(), // Still works as first modifier is prioritized\n      class: 'unavailable',\n      disabled: true,\n      view: 'month', // Limit to month view\n    },\n  ];\n}\n"}}]);