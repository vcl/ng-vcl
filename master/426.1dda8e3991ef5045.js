"use strict";(self.webpackChunkng_vcl_demo=self.webpackChunkng_vcl_demo||[]).push([[426],{1426:(p,l,t)=>{t.r(l),t.d(l,{PanelDemoModule:()=>T,demo:()=>u});var a=t(6814),m=t(95),d=t(2911),v=t(2916),r=t(2320),n=t(5879),g=t(5296),P=t(6094),C=t(4653),i=t(178);let f=(()=>{var e;class c{constructor(){}}return(e=c).\u0275fac=function(o){return new(o||e)},e.\u0275cmp=n.Xpm({type:e,selectors:[["ng-component"]],decls:25,vars:1,consts:[[1,"row","align-items-center","py-1"],[3,"showCloseButton"],[1,"row","gutterx-3","align-items-center"],["icon","fas:exclamation-circle",1,"scale300p"],["type","button","vcl-button","","vclPanelFooterButton","",1,"transparent","outline"],["type","button","vcl-button","","vclPanelFooterButton","",1,"emphasized"],["type","warning"]],template:function(o,y){1&o&&(n.TgZ(0,"vcl-panel")(1,"vcl-panel-title"),n._uU(2,"Panel Title"),n.qZA(),n._uU(3," Panel Content "),n.TgZ(4,"vcl-panel-footer")(5,"div",0),n._uU(6,"Panel Footer"),n.qZA()()(),n.TgZ(7,"vcl-panel-dialog",1)(8,"vcl-panel-title"),n._uU(9,"Panel Title"),n.qZA(),n.TgZ(10,"div",2),n._UZ(11,"vcl-icon",3),n.TgZ(12,"div"),n._uU(13,"Panel Content"),n.qZA()(),n.TgZ(14,"button",4),n._uU(15," Cancel "),n.qZA(),n.TgZ(16,"button",5),n._uU(17," Save Changes "),n.qZA()(),n.TgZ(18,"vcl-panel",6)(19,"vcl-panel-title"),n._uU(20,"Panel Title"),n.qZA(),n.TgZ(21,"div",2),n._UZ(22,"vcl-icon",3),n.TgZ(23,"div"),n._uU(24,"Panel with semantic coloring"),n.qZA()()()),2&o&&(n.xp6(7),n.Q6J("showCloseButton",!0))},dependencies:[g.r,P.o,C.y,i.US,i.jW,i.r8,i.ag],encapsulation:2}),c})();const h='# vcl-panel\n\nA panel consisting a body, header and footer. All elements are optional.\nThere is a dialog variant, optimized for modal dialogs.\n\n## Usage\n\n```typescript\nimport { VCLPanelModule } from \'@vcl/ng-vcl\';\n\n@NgModule({\n  imports: [\n    VCLPanelModule\n  ],\n  ...\n})\nexport class AppComponent {}\n```\n\n```html\n<vcl-panel>\n  <vcl-panel-title>Panel Title</vcl-panel-title>\n  Panel Content\n  <vcl-panel-footer>Panel Footer</vcl-panel-footer>\n</vcl-panel>\n\n<vcl-panel-dialog [showCloseButton]="true">\n  <vcl-panel-title>Panel Title</vcl-panel-title>\n  <div class="row gutterx-3 align-items-center">\n    <vcl-icon icon="fas:exclamation-circle" class="scale300p"></vcl-icon>\n    <div>Panel Content</div>\n  </div>\n  <button\n    type="button"\n    vcl-button\n    vclPanelFooterButton\n    class="transparent outline">\n    Cancel\n  </button>\n  <button type="button" vcl-button vclPanelFooterButton class="emphasized">\n    Save Changes\n  </button>\n</vcl-panel-dialog>\n```\n\n### API\n\n#### Attributes\n\n| Name              | Type                                                    | Default | Description                        |\n| ----------------- | ------------------------------------------------------- | ------- | ---------------------------------- |\n| `showCloseButton` | boolean                                                 | false   | Shows a close button in the header |\n| `type`            | \'success\' \\| \'danger\' \\| \'warning\' \\| \'error\' \\| \'info\' |         | Semantic coloring                  |\n\n#### Events\n\n| Name    | Description                            |\n| ------- | -------------------------------------- |\n| `close` | Fired when the close button is clicked |\n';function u(){return{label:"Panel",tabs:{Demo:f,"README.md":{type:"md",content:h},"demo.component.html":{type:"html",content:t(9067)},"demo.component.ts":{type:"ts",content:t(792)}}}}let T=(()=>{var e;class c{}return(e=c).\u0275fac=function(o){return new(o||e)},e.\u0275mod=n.oAB({type:e}),e.\u0275inj=n.cJS({imports:[a.ez,m.u5,r.l,v.VzK,v.V4c,v.NhM,d.Bz.forChild([{path:"",component:r.z,data:{demo:u}}])]}),c})()},9067:(p,l,t)=>{t.r(l),t.d(l,{default:()=>a});const a='<vcl-panel>\n  <vcl-panel-title>Panel Title</vcl-panel-title>\n  Panel Content\n  <vcl-panel-footer>\n    <div class="row align-items-center py-1">Panel Footer</div>\n  </vcl-panel-footer>\n</vcl-panel>\n\n<vcl-panel-dialog [showCloseButton]="true">\n  <vcl-panel-title>Panel Title</vcl-panel-title>\n  <div class="row gutterx-3 align-items-center">\n    <vcl-icon icon="fas:exclamation-circle" class="scale300p"></vcl-icon>\n    <div>Panel Content</div>\n  </div>\n  <button\n    type="button"\n    vcl-button\n    vclPanelFooterButton\n    class="transparent outline">\n    Cancel\n  </button>\n  <button type="button" vcl-button vclPanelFooterButton class="emphasized">\n    Save Changes\n  </button>\n</vcl-panel-dialog>\n\n<vcl-panel type="warning">\n  <vcl-panel-title>Panel Title</vcl-panel-title>\n  <div class="row gutterx-3 align-items-center">\n    <vcl-icon icon="fas:exclamation-circle" class="scale300p"></vcl-icon>\n    <div>Panel with semantic coloring</div>\n  </div>\n</vcl-panel>\n'},792:(p,l,t)=>{t.r(l),t.d(l,{default:()=>a});const a="import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  templateUrl: 'demo.component.html',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class PanelDemoComponent {\n  constructor() {}\n}\n"}}]);