"use strict";(self.webpackChunkng_vcl_demo=self.webpackChunkng_vcl_demo||[]).push([[980],{4980:(p,c,t)=>{t.r(c),t.d(c,{FormControlGroupDemoModule:()=>re,demo:()=>b});var m=t(177),n=t(4341),E=t(3339),o=t(3323),h=t(9042),e=t(4438),f=t(9688),C=t(8070),j=t(6692),y=t(2328),G=t(7038),R=t(9826),w=t(5704),x=t(2853),N=t(3729),F=t(1423),k=t(5694),P=t(1522),A=t(1503),V=t(3882),$=t(7300),S=t(1900),D=t(9611),I=t(9512),Y=t(6182),M=t(2192),L=t(2024),d=t(5566),U=t(9060),T=t(2826),B=t(7269),W=t(4756),H=t(9506),X=t(2116),K=t(783),J=t(4248);const O=["form"],Q=()=>({width:"25em"});function z(l,v){if(1&l){const r=e.RV6();e.j41(0,"vcl-panel-dialog")(1,"vcl-panel-title"),e.EFF(2),e.k0s(),e.EFF(3),e.j41(4,"button",53),e.bIt("click",function(){e.eBV(r),e.XpG();const a=e.sdS(5);return e.Njj(a.close())}),e.EFF(5,"OK"),e.k0s()()}if(2&l){const r=v.header,s=v.text;e.R7$(2),e.JRh(r),e.R7$(),e.SpI(" ",s," ")}}function Z(l,v){1&l&&(e.j41(0,"vcl-form-control-group")(1,"vcl-label"),e.EFF(2,"Leader"),e.k0s(),e.nrm(3,"vcl-flip-switch",54),e.k0s())}function q(l,v){if(1&l&&(e.j41(0,"vcl-hint"),e.EFF(1),e.k0s()),2&l){const r=e.XpG();e.R7$(),e.Lme("",r.skillPoints," of ",r.skillPointsMax," skill points used")}}function _(l,v){if(1&l&&(e.j41(0,"vcl-hint-warning"),e.EFF(1),e.k0s()),2&l){const r=e.XpG();e.R7$(),e.Lme("",r.skillPoints," of ",r.skillPointsMax," skill points used")}}function ee(l,v){if(1&l&&(e.j41(0,"vcl-hint-error"),e.EFF(1),e.k0s()),2&l){const r=e.XpG();e.R7$(),e.Lme("",r.skillPoints," of ",r.skillPointsMax," skill points used")}}let te=(()=>{class l{constructor(r,s){this.notifier=r,this.da=s,this.datePattern=this.da.pattern("date"),this.skillPointsMax=10,this.defaultValues={level:1,leader:!1,hitpoints:10,strength:3,agility:3,intelligence:3,perks:[]},this.formGroup=new n.J3({name:new n.hs("",[n.k0.required,n.k0.minLength(2)]),description:new n.hs("",[]),dob:new n.hs(null,[n.k0.required]),password:new n.hs("",[n.k0.required,n.k0.pattern("(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-zd$@$!%*?&].{8,}")]),picture:new n.hs(null,[]),level:new n.hs(this.defaultValues.level,[]),leader:new n.hs(this.defaultValues.leader,[]),email:new n.hs("",{validators:[n.k0.email]}),terms:new n.hs(!1,[a=>a.value?null:{termsDisagree:!0}]),gender:new n.hs(null,n.k0.required),class:new n.hs(null,[n.k0.required]),alignment:new n.hs(null,[n.k0.required]),hitpoints:new n.hs(this.defaultValues.hitpoints,[n.k0.min(1),n.k0.max(100)]),strength:new n.hs(this.defaultValues.strength,[n.k0.min(1),n.k0.max(10)]),agility:new n.hs(this.defaultValues.agility,[n.k0.min(1),n.k0.max(10)]),intelligence:new n.hs(this.defaultValues.intelligence,[n.k0.min(1),n.k0.max(10)]),perks:new n.hs(this.defaultValues.perks,[this.validatePerks.bind(this)])},[this.validateSkills.bind(this)]),this.termsErrorStateAgent=(a,i)=>a&&i&&i.invalid&&a.submitted,this.helpLayerConfig={maxWidth:"25em"}}get level(){const r=this.formGroup&&this.formGroup.get("level");return r?r.value:0}get skillPoints(){const r=this.formGroup&&this.formGroup.get("strength"),s=this.formGroup&&this.formGroup.get("agility"),a=this.formGroup&&this.formGroup.get("intelligence");return r&&s&&a?r.value+s.value+a.value:0}get skillPointsAvailable(){return this.skillPointsMax-this.skillPoints}validateSkills(){return this.skillPoints>this.skillPointsMax?{skills:!0}:null}validatePerks(r){return Array.isArray(r.value)&&2===r.value.length?null:{perks:!0}}onSubmit(){this.formGroup.valid?this.notifier.success("Hero created"):this.notifier.error("Hero invalid")}onReset(){this.form.resetForm(this.defaultValues),this.notifier.info("Hero reset")}static#e=this.\u0275fac=function(s){return new(s||l)(e.rXU(o.iJt),e.rXU(o.MJR))};static#t=this.\u0275cmp=e.VBU({type:l,selectors:[["ng-component"]],viewQuery:function(s,a){if(1&s&&e.GBs(O,5),2&s){let i;e.mGM(i=e.lsd())&&(a.form=i.first)}},decls:231,vars:44,consts:[["form","ngForm"],["help","vclLayer"],["strengthRating","vclRating"],["agilityRating","vclRating"],["intelligenceRating","vclRating"],["novalidate","","vclForm","",2,"max-width","40em",3,"submit","formGroup"],[3,"vclLayer"],[1,"help-wrapper"],["vclInput","","formControlName","name"],["vcl-button","","square","","type","button",1,"transparent",3,"click"],["icon","vcl:info",1,"scale130p"],["error","required"],["error","minlength"],[1,"auto-height"],["vclInput","","formControlName","description","placeholder","Description of the hero",3,"autogrow","minRows","maxRows"],[1,"row","gutterx-4"],[1,"flex"],["formControlName","dob",3,"placeholder"],["icon","fas:envelope"],["vclInput","","formControlName","email"],["error","email"],["vclInput","","formControlName","password","placeholder","Enter password"],["error","pattern"],["formControlName","level",3,"min","max"],[4,"ngIf"],["formControlName","picture",3,"multiple"],["formControlName","gender"],["value","m"],["vclAppend","","icon","fas:mars"],["value","f"],["vclAppend","","icon","fas:venus"],["value","g"],["vclAppend","","icon","fas:genderless"],["formControlName","alignment"],["vcl-button","",3,"value"],["formControlName","class"],[3,"value"],["formControlName","hitpoints",3,"min","max","scale","lock"],[3,"target"],["formControlName","strength"],["formControlName","agility"],["formControlName","intelligence"],["placeholder","Select perks"],["formControlName","perks","selectionMode","multiple"],["error","perks"],[3,"errorStateAgent"],["formControlName","terms"],["href","'https://github.com/ng-vcl/ng-vcl'","target","'_blank'"],["error","termsDisagree"],[1,"loose-button-group"],["vcl-button","","type","submit",1,"emphasized"],["vcl-button","","type","button",3,"click"],[1,"value"],["vcl-button","","vclPanelFooterButton","",1,"transparent","outline",3,"click"],["formControlName","leader"]],template:function(s,a){if(1&s){const i=e.RV6();e.j41(0,"form",5,0),e.bIt("submit",function(){return e.eBV(i),e.Njj(a.onSubmit())}),e.j41(2,"h2"),e.EFF(3,"Create a hero"),e.k0s(),e.DNE(4,z,6,2,"ng-template",6,1,e.C5r),e.j41(6,"vcl-form-control-group")(7,"vcl-label"),e.EFF(8,"Name"),e.k0s(),e.j41(9,"div",7)(10,"vcl-input-field"),e.nrm(11,"input",8),e.k0s(),e.j41(12,"button",9),e.bIt("click",function(){e.eBV(i);const g=e.sdS(5);return e.Njj(g.open({data:{header:"Name",text:"The name of the hero. Lorem ipsum dolor sit amet consectetur, adipisicing elit. Eligendi ad excepturi molestiae esse unde repellendus ex accusantium officia placeat voluptatem commodi et, laboriosam laudantium, cum, ratione debitis inventore? Esse, eaque!"}}))}),e.nrm(13,"vcl-icon",10),e.k0s()(),e.j41(14,"vcl-hint-error",11),e.EFF(15,"Name is required"),e.k0s(),e.j41(16,"vcl-hint-error",12),e.EFF(17,"Name must have a length of at least 2 characters"),e.k0s()(),e.j41(18,"vcl-form-control-group")(19,"vcl-label"),e.EFF(20,"Description"),e.k0s(),e.j41(21,"vcl-input-field",13),e.nrm(22,"textarea",14),e.k0s()(),e.j41(23,"div",15)(24,"vcl-form-control-group",16)(25,"vcl-label"),e.EFF(26,"Date of Birth"),e.k0s(),e.nrm(27,"vcl-date-picker",17),e.j41(28,"vcl-hint-error",11),e.EFF(29,"Date of Birth is required"),e.k0s()(),e.j41(30,"vcl-form-control-group",16)(31,"vcl-label"),e.EFF(32,"Email"),e.k0s(),e.j41(33,"vcl-input-field"),e.nrm(34,"vcl-icon",18)(35,"input",19),e.k0s(),e.j41(36,"vcl-hint-error",11),e.EFF(37,"Email is required"),e.k0s(),e.j41(38,"vcl-hint-error",20),e.EFF(39,"Invalid Email address"),e.k0s()()(),e.j41(40,"vcl-form-control-group")(41,"vcl-label"),e.EFF(42,"Password"),e.k0s(),e.j41(43,"vcl-password-input"),e.nrm(44,"input",21),e.k0s(),e.j41(45,"vcl-hint-error",11),e.EFF(46,"Password is required"),e.k0s(),e.j41(47,"vcl-hint-error",22),e.EFF(48,"Password must... "),e.k0s(),e.j41(49,"vcl-hint-error",22),e.EFF(50,"- have at least 8 characters in length"),e.k0s(),e.j41(51,"vcl-hint-error",22),e.EFF(52,"- contain a lowercase letters"),e.k0s(),e.j41(53,"vcl-hint-error",22),e.EFF(54,"- contain a uppercase letters"),e.k0s(),e.j41(55,"vcl-hint-error",22),e.EFF(56,"- contain a number"),e.k0s(),e.j41(57,"vcl-hint-error",22),e.EFF(58,"- contain a special character"),e.k0s()(),e.j41(59,"vcl-form-control-group")(60,"vcl-label"),e.EFF(61,"Level"),e.k0s(),e.nrm(62,"demo-counter",23),e.k0s(),e.DNE(63,Z,4,0,"vcl-form-control-group",24),e.j41(64,"vcl-form-control-group")(65,"vcl-label"),e.EFF(66,"Picture"),e.k0s(),e.j41(67,"vcl-file-input",25),e.EFF(68,"Picture of the hero"),e.k0s()(),e.j41(69,"vcl-form-control-group")(70,"vcl-label"),e.EFF(71,"Gender"),e.k0s(),e.j41(72,"vcl-radio-group",26)(73,"vcl-radio-button",27)(74,"vcl-icogram"),e.EFF(75,"Male"),e.nrm(76,"vcl-icon",28),e.k0s()(),e.j41(77,"vcl-radio-button",29)(78,"vcl-icogram"),e.EFF(79,"Female"),e.nrm(80,"vcl-icon",30),e.k0s()(),e.j41(81,"vcl-radio-button",31)(82,"vcl-icogram"),e.EFF(83,"Genderless"),e.nrm(84,"vcl-icon",32),e.k0s()(),e.j41(85,"vcl-hint-error",11),e.EFF(86,"You must select a gender"),e.k0s()()(),e.j41(87,"vcl-form-control-group")(88,"vcl-label"),e.EFF(89,"Alignment"),e.k0s(),e.j41(90,"vcl-button-group",33)(91,"button",34),e.EFF(92,"Good"),e.k0s(),e.j41(93,"button",34),e.EFF(94,"Neutral"),e.k0s(),e.j41(95,"button",34),e.EFF(96,"Evil"),e.k0s()(),e.j41(97,"vcl-hint-error",11),e.EFF(98,"You must select an alignment"),e.k0s()(),e.j41(99,"vcl-form-control-group")(100,"vcl-label"),e.EFF(101,"Class"),e.k0s(),e.j41(102,"vcl-select-list",35)(103,"vcl-select-list-item",36),e.EFF(104," Warrior "),e.k0s(),e.j41(105,"vcl-select-list-item",36),e.EFF(106," Mage "),e.k0s(),e.j41(107,"vcl-select-list-item",36),e.EFF(108," Rogue "),e.k0s()(),e.j41(109,"vcl-hint-error",11),e.EFF(110,"You must select a class"),e.k0s()(),e.j41(111,"vcl-form-control-group")(112,"vcl-label"),e.EFF(113,"Hit points"),e.k0s(),e.nrm(114,"vcl-slider",37),e.k0s(),e.j41(115,"fieldset")(116,"legend"),e.EFF(117,"Skills"),e.k0s(),e.j41(118,"vcl-form-control-group")(119,"vcl-label"),e.EFF(120,"Strength ("),e.nrm(121,"vcl-rating-item-label",38),e.EFF(122,")"),e.k0s(),e.j41(123,"vcl-rating",39,2)(125,"vcl-rating-item"),e.EFF(126,"1"),e.k0s(),e.j41(127,"vcl-rating-item"),e.EFF(128,"2"),e.k0s(),e.j41(129,"vcl-rating-item"),e.EFF(130,"3"),e.k0s(),e.j41(131,"vcl-rating-item"),e.EFF(132,"4"),e.k0s(),e.j41(133,"vcl-rating-item"),e.EFF(134,"5"),e.k0s()()(),e.j41(135,"vcl-form-control-group")(136,"vcl-label"),e.EFF(137,"Agility ("),e.nrm(138,"vcl-rating-item-label",38),e.EFF(139,")"),e.k0s(),e.j41(140,"vcl-rating",40,3)(142,"vcl-rating-item"),e.EFF(143,"1"),e.k0s(),e.j41(144,"vcl-rating-item"),e.EFF(145,"2"),e.k0s(),e.j41(146,"vcl-rating-item"),e.EFF(147,"3"),e.k0s(),e.j41(148,"vcl-rating-item"),e.EFF(149,"4"),e.k0s(),e.j41(150,"vcl-rating-item"),e.EFF(151,"5"),e.k0s()()(),e.j41(152,"vcl-form-control-group")(153,"vcl-label"),e.EFF(154,"Intelligence ("),e.nrm(155,"vcl-rating-item-label",38),e.EFF(156,")"),e.k0s(),e.j41(157,"vcl-rating",41,4)(159,"vcl-rating-item"),e.EFF(160,"1"),e.k0s(),e.j41(161,"vcl-rating-item"),e.EFF(162,"2"),e.k0s(),e.j41(163,"vcl-rating-item"),e.EFF(164,"3"),e.k0s(),e.j41(165,"vcl-rating-item"),e.EFF(166,"4"),e.k0s(),e.j41(167,"vcl-rating-item"),e.EFF(168,"5"),e.k0s()()(),e.DNE(169,q,2,2,"vcl-hint",24)(170,_,2,2,"vcl-hint-warning",24)(171,ee,2,2,"vcl-hint-error",24),e.k0s(),e.j41(172,"vcl-form-control-group")(173,"vcl-label"),e.EFF(174,"Perks"),e.k0s(),e.j41(175,"vcl-select",42)(176,"vcl-select-list",43)(177,"vcl-select-list-item",36),e.EFF(178," Snake Eater "),e.j41(179,"vcl-sub-label"),e.EFF(180,"It gives you a 25% increase to your poison resistance.\t"),e.k0s()(),e.j41(181,"vcl-select-list-item",36),e.EFF(182," Swift Learner "),e.j41(183,"vcl-sub-label"),e.EFF(184,"Swift Learner\tWhenever you gain experience, you'll receive 5% more experience per level of the perk."),e.k0s()(),e.j41(185,"vcl-select-list-item",36),e.EFF(186," Toughness "),e.j41(187,"vcl-sub-label"),e.EFF(188,"It adds 10% to your general damage resistance per level."),e.k0s()(),e.j41(189,"vcl-select-list-item",36),e.EFF(190," Explorer "),e.j41(191,"vcl-sub-label"),e.EFF(192,"You'll get more random encounters with this perk."),e.k0s()()()(),e.j41(193,"vcl-hint-error",44),e.EFF(194,"You must select two perks"),e.k0s()(),e.j41(195,"vcl-form-control-group",45)(196,"vcl-checkbox",46),e.EFF(197," Agree to our terms "),e.k0s(),e.j41(198,"vcl-hint"),e.EFF(199,"Read the "),e.j41(200,"a",47),e.EFF(201,"terms"),e.k0s(),e.EFF(202," to learn how we collect, use and share your data"),e.k0s(),e.j41(203,"vcl-hint-error",48),e.EFF(204,"You must agree to our Terms"),e.k0s()(),e.j41(205,"div",49)(206,"button",50),e.EFF(207,"Submit"),e.k0s(),e.j41(208,"button",51),e.bIt("click",function(){return e.eBV(i),e.Njj(a.onReset())}),e.EFF(209,"Reset"),e.k0s()(),e.j41(210,"div",52)(211,"h4"),e.EFF(212,"Form"),e.k0s(),e.j41(213,"pre"),e.EFF(214),e.k0s(),e.j41(215,"pre"),e.EFF(216),e.k0s(),e.j41(217,"pre"),e.EFF(218),e.k0s(),e.j41(219,"pre"),e.EFF(220),e.k0s(),e.j41(221,"pre"),e.EFF(222),e.k0s(),e.j41(223,"pre"),e.EFF(224),e.k0s(),e.j41(225,"pre"),e.EFF(226),e.nI1(227,"json"),e.k0s(),e.j41(228,"pre"),e.EFF(229),e.nI1(230,"json"),e.k0s()()()}if(2&s){const i=e.sdS(1),u=e.sdS(124),g=e.sdS(141),le=e.sdS(158);e.Y8G("formGroup",a.formGroup),e.R7$(4),e.Y8G("vclLayer",e.lJ4(43,Q)),e.R7$(18),e.Y8G("autogrow",!0)("minRows",3)("maxRows",10),e.R7$(5),e.Y8G("placeholder",a.datePattern),e.R7$(35),e.Y8G("min",1)("max",10),e.R7$(),e.Y8G("ngIf",a.level>=5),e.R7$(4),e.Y8G("multiple",!1),e.R7$(24),e.Y8G("value","good"),e.R7$(2),e.Y8G("value","neutral"),e.R7$(2),e.Y8G("value","evil"),e.R7$(8),e.Y8G("value","warrior"),e.R7$(2),e.Y8G("value","mage"),e.R7$(2),e.Y8G("value","rogue"),e.R7$(7),e.Y8G("min",5)("max",20)("scale",16)("lock",!0),e.R7$(7),e.Y8G("target",u),e.R7$(17),e.Y8G("target",g),e.R7$(17),e.Y8G("target",le),e.R7$(14),e.Y8G("ngIf",!i.hasError("skills")&&0===a.skillPointsAvailable),e.R7$(),e.Y8G("ngIf",!i.hasError("skills")&&a.skillPointsAvailable>0),e.R7$(),e.Y8G("ngIf",i.hasError("skills")),e.R7$(6),e.Y8G("value","snakeeater"),e.R7$(4),e.Y8G("value","swiftlearner"),e.R7$(4),e.Y8G("value","toughness"),e.R7$(4),e.Y8G("value","explorer"),e.R7$(6),e.Y8G("errorStateAgent",a.termsErrorStateAgent),e.R7$(19),e.SpI("status: ",i.status,""),e.R7$(2),e.SpI("valid: ",i.valid,""),e.R7$(2),e.SpI("dirty: ",i.dirty,""),e.R7$(2),e.SpI("submitted: ",i.submitted,""),e.R7$(2),e.SpI("touched: ",i.touched,""),e.R7$(2),e.SpI("pristine: ",i.pristine,""),e.R7$(2),e.SpI("errors: ",e.bMT(227,39,i.errors),""),e.R7$(3),e.SpI("value: ",e.bMT(230,41,i.value),"")}},dependencies:[m.bT,n.qT,n.me,n.BC,n.cb,n.j4,n.JD,f.s,C.Q,j.R,y.m,G.Z,R.k,w.i,x._,N.W,F.g,F.O,k.C3,k.Wr,P.C,A.Uf,V.H,$.X,S.m,D.M,I.k,Y.P,M.b,L.g,d.EA,d.f8,d.Qq,U.P,T.d,B.Y,W.d,H.w,X.e,K.B,J.O,m.TG],styles:[".help-wrapper{display:flex;flex-direction:row;align-items:flex-start;justify-content:space-between}.help-wrapper>:first-child{flex:0 0 90%}\n"],encapsulation:2})}return l})();const ne='# vcl-form-control-group\n\nForm control group to handle the error-state of form controls\n\n## Usage\n\n```js\nimport { VCLFormControlGroupModule } from \'@vcl/ng-vcl\';\n\n@NgModule({\n  imports: [ VCLFormControlGroupModule ],\n  ...\n})\nexport class AppComponent {}\n```\n\n```html\n<form vclForm [formGroup]="formGroup">\n  <vcl-form-control-group>\n    <vcl-label>Name</vcl-label>\n    <vcl-input-field>\n      <input formControlName="name">\n    </vcl-input-field>\n    <vcl-hint-error error="required">Name is required</vcl-hint-error>\n    <vcl-hint-error error="minlength">Name must have a length of at least 2 characters</vcl-hint-error>\n  </vcl-form-control-group>\n</form>\n```\n';function b(){return{label:"Form Control Group",tabs:{Demo:te,"README.md":{type:"md",content:ne},"demo.component.html":{type:"html",content:t(135)},"demo.component.scss":{type:"scss",content:t(7344)},"demo.component.ts":{type:"ts",content:t(2319)}}}}let re=(()=>{class l{static#e=this.\u0275fac=function(s){return new(s||l)};static#t=this.\u0275mod=e.$C({type:l});static#n=this.\u0275inj=e.G2t({imports:[m.MD,n.YN,n.X1,h.q,f.c,o.e7Q,o.tqJ,o.AeE,o.dWi,o.VNE,o.oH_,o.n0Y,o.Fs_,o.j2$,o.Q$9,o.$KK,o.QLd,o.HR$,o.F5u,o.AE5,o.L86,o.$FV,o.KE0,o._Mc,o._m7,E.iI.forChild([{path:"",component:h.D,data:{demo:b}}])]})}return l})()},135:(p,c,t)=>{t.r(c),t.d(c,{default:()=>m});const m='<form novalidate [formGroup]="formGroup" #form="ngForm" style="max-width: 40em;" (submit)="onSubmit()" vclForm>\n  <h2>Create a hero</h2>\n\n  <ng-template [vclLayer]="{width: \'25em\'}" #help="vclLayer" let-header="header" let-text="text">\n    <vcl-panel-dialog>\n      <vcl-panel-title>{{header}}</vcl-panel-title>\n      {{text}}\n      <button vcl-button vclPanelFooterButton class="transparent outline" (click)="help.close()">OK</button>\n    </vcl-panel-dialog>\n  </ng-template>\n\n  <vcl-form-control-group>\n    <vcl-label>Name</vcl-label>\n    <div class="help-wrapper">\n      <vcl-input-field>\n        <input vclInput formControlName="name">\n      </vcl-input-field>\n      <button vcl-button square class="transparent" (click)="help.open({data: { header: \'Name\', text: \'The name of the hero. Lorem ipsum dolor sit amet consectetur, adipisicing elit. Eligendi ad excepturi molestiae esse unde repellendus ex accusantium officia placeat voluptatem commodi et, laboriosam laudantium, cum, ratione debitis inventore? Esse, eaque!\'}})" type="button">\n        <vcl-icon class="scale130p" icon="vcl:info"></vcl-icon>\n      </button>\n    </div>\n    <vcl-hint-error error="required">Name is required</vcl-hint-error>\n    <vcl-hint-error error="minlength">Name must have a length of at least 2 characters</vcl-hint-error>\n  </vcl-form-control-group>\n\n  <vcl-form-control-group>\n    <vcl-label>Description</vcl-label>\n    <vcl-input-field class="auto-height">\n      <textarea vclInput formControlName="description" placeholder="Description of the hero" [autogrow]="true" [minRows]="3" [maxRows]="10"></textarea>\n    </vcl-input-field>\n  </vcl-form-control-group>\n\n  <div class="row gutterx-4">\n    <vcl-form-control-group class="flex">\n      <vcl-label>Date of Birth</vcl-label>\n      <vcl-date-picker formControlName="dob" [placeholder]="datePattern"></vcl-date-picker>\n      <vcl-hint-error error="required">Date of Birth is required</vcl-hint-error>\n    </vcl-form-control-group>\n\n    <vcl-form-control-group class="flex">\n      <vcl-label>Email</vcl-label>\n      <vcl-input-field>\n        <vcl-icon icon="fas:envelope"></vcl-icon>\n        <input vclInput formControlName="email">\n      </vcl-input-field>\n      <vcl-hint-error error="required">Email is required</vcl-hint-error>\n      <vcl-hint-error error="email">Invalid Email address</vcl-hint-error>\n    </vcl-form-control-group>\n  </div>\n\n\n  <vcl-form-control-group>\n    <vcl-label>Password</vcl-label>\n    <vcl-password-input>\n      <input vclInput formControlName="password" placeholder="Enter password">\n    </vcl-password-input>\n    <vcl-hint-error error="required">Password is required</vcl-hint-error>\n    <vcl-hint-error error="pattern">Password must... </vcl-hint-error>\n    <vcl-hint-error error="pattern">- have at least 8 characters in length</vcl-hint-error>\n    <vcl-hint-error error="pattern">- contain a lowercase letters</vcl-hint-error>\n    <vcl-hint-error error="pattern">- contain a uppercase letters</vcl-hint-error>\n    <vcl-hint-error error="pattern">- contain a number</vcl-hint-error>\n    <vcl-hint-error error="pattern">- contain a special character</vcl-hint-error>\n  </vcl-form-control-group>\n\n  <vcl-form-control-group>\n    <vcl-label>Level</vcl-label>\n    <demo-counter formControlName="level" [min]="1" [max]="10"></demo-counter>\n  </vcl-form-control-group>\n\n  <vcl-form-control-group *ngIf="level >= 5">\n    <vcl-label>Leader</vcl-label>\n    <vcl-flip-switch formControlName="leader"></vcl-flip-switch>\n  </vcl-form-control-group>\n\n  <vcl-form-control-group>\n    <vcl-label>Picture</vcl-label>\n    <vcl-file-input [multiple]="false" formControlName="picture">Picture of the hero</vcl-file-input>\n  </vcl-form-control-group>\n\n  <vcl-form-control-group>\n    <vcl-label>Gender</vcl-label>\n    <vcl-radio-group formControlName="gender">\n      <vcl-radio-button value="m">\n        <vcl-icogram>Male<vcl-icon vclAppend icon="fas:mars"></vcl-icon></vcl-icogram>\n      </vcl-radio-button>\n      <vcl-radio-button value="f">\n        <vcl-icogram>Female<vcl-icon vclAppend icon="fas:venus"></vcl-icon></vcl-icogram>\n      </vcl-radio-button>\n      <vcl-radio-button value="g">\n        <vcl-icogram>Genderless<vcl-icon vclAppend icon="fas:genderless"></vcl-icon></vcl-icogram>\n      </vcl-radio-button>\n      <vcl-hint-error error="required">You must select a gender</vcl-hint-error>\n    </vcl-radio-group>\n\n  </vcl-form-control-group>\n\n  <vcl-form-control-group>\n    <vcl-label>Alignment</vcl-label>\n    <vcl-button-group formControlName="alignment">\n      <button vcl-button [value]="\'good\'">Good</button>\n      <button vcl-button [value]="\'neutral\'">Neutral</button>\n      <button vcl-button [value]="\'evil\'">Evil</button>\n    </vcl-button-group>\n    <vcl-hint-error error="required">You must select an alignment</vcl-hint-error>\n  </vcl-form-control-group>\n\n  <vcl-form-control-group>\n    <vcl-label>Class</vcl-label>\n    <vcl-select-list formControlName="class">\n      <vcl-select-list-item [value]="\'warrior\'">\n        Warrior\n      </vcl-select-list-item>\n      <vcl-select-list-item [value]="\'mage\'">\n        Mage\n      </vcl-select-list-item>\n      <vcl-select-list-item [value]="\'rogue\'">\n        Rogue\n      </vcl-select-list-item>\n    </vcl-select-list>\n    <vcl-hint-error error="required">You must select a class</vcl-hint-error>\n  </vcl-form-control-group>\n\n\n  <vcl-form-control-group>\n    <vcl-label>Hit points</vcl-label>\n    <vcl-slider formControlName="hitpoints" [min]="5" [max]="20" [scale]="16" [lock]="true"></vcl-slider>\n  </vcl-form-control-group>\n\n  <fieldset>\n    <legend>Skills</legend>\n    <vcl-form-control-group>\n      <vcl-label>Strength (<vcl-rating-item-label [target]="strengthRating"></vcl-rating-item-label>)</vcl-label>\n      <vcl-rating formControlName="strength" #strengthRating="vclRating">\n        <vcl-rating-item>1</vcl-rating-item>\n        <vcl-rating-item>2</vcl-rating-item>\n        <vcl-rating-item>3</vcl-rating-item>\n        <vcl-rating-item>4</vcl-rating-item>\n        <vcl-rating-item>5</vcl-rating-item>\n      </vcl-rating>\n    </vcl-form-control-group>\n    <vcl-form-control-group>\n      <vcl-label>Agility (<vcl-rating-item-label [target]="agilityRating"></vcl-rating-item-label>)</vcl-label>\n      <vcl-rating formControlName="agility" #agilityRating="vclRating">\n        <vcl-rating-item>1</vcl-rating-item>\n        <vcl-rating-item>2</vcl-rating-item>\n        <vcl-rating-item>3</vcl-rating-item>\n        <vcl-rating-item>4</vcl-rating-item>\n        <vcl-rating-item>5</vcl-rating-item>\n      </vcl-rating>\n    </vcl-form-control-group>\n    <vcl-form-control-group>\n      <vcl-label>Intelligence (<vcl-rating-item-label [target]="intelligenceRating"></vcl-rating-item-label>)</vcl-label>\n      <vcl-rating formControlName="intelligence" #intelligenceRating="vclRating">\n        <vcl-rating-item>1</vcl-rating-item>\n        <vcl-rating-item>2</vcl-rating-item>\n        <vcl-rating-item>3</vcl-rating-item>\n        <vcl-rating-item>4</vcl-rating-item>\n        <vcl-rating-item>5</vcl-rating-item>\n      </vcl-rating>\n    </vcl-form-control-group>\n    <vcl-hint *ngIf="!form.hasError(\'skills\') && skillPointsAvailable === 0">{{skillPoints}} of {{skillPointsMax}} skill points used</vcl-hint>\n    <vcl-hint-warning *ngIf="!form.hasError(\'skills\') && skillPointsAvailable > 0">{{skillPoints}} of {{skillPointsMax}} skill points used</vcl-hint-warning>\n    <vcl-hint-error *ngIf="form.hasError(\'skills\')">{{skillPoints}} of {{skillPointsMax}} skill points used</vcl-hint-error>\n  </fieldset>\n\n  <vcl-form-control-group>\n    <vcl-label>Perks</vcl-label>\n    <vcl-select placeholder="Select perks">\n      <vcl-select-list formControlName="perks"  selectionMode="multiple">\n        <vcl-select-list-item [value]="\'snakeeater\'">\n          Snake Eater\n          <vcl-sub-label>It gives you a 25% increase to your poison resistance.\t</vcl-sub-label>\n        </vcl-select-list-item>\n        <vcl-select-list-item [value]="\'swiftlearner\'">\n          Swift Learner\n          <vcl-sub-label>Swift Learner\tWhenever you gain experience, you\'ll receive 5% more experience per level of the perk.</vcl-sub-label>\n        </vcl-select-list-item>\n        <vcl-select-list-item [value]="\'toughness\'">\n          Toughness\n          <vcl-sub-label>It adds 10% to your general damage resistance per level.</vcl-sub-label>\n        </vcl-select-list-item>\n        <vcl-select-list-item [value]="\'explorer\'">\n          Explorer\n          <vcl-sub-label>You\'ll get more random encounters with this perk.</vcl-sub-label>\n        </vcl-select-list-item>\n      </vcl-select-list>\n    </vcl-select>\n    <vcl-hint-error error="perks">You must select two perks</vcl-hint-error>\n  </vcl-form-control-group>\n\n  <vcl-form-control-group [errorStateAgent]="termsErrorStateAgent">\n    <vcl-checkbox formControlName="terms" >\n      Agree to our terms\n    </vcl-checkbox>\n    <vcl-hint>Read the <a href="\'https://github.com/ng-vcl/ng-vcl\'" target="\'_blank\'">terms</a> to learn how we collect, use and share your data</vcl-hint>\n    <vcl-hint-error error="termsDisagree">You must agree to our Terms</vcl-hint-error>\n  </vcl-form-control-group>\n\n  <div class="loose-button-group">\n    <button vcl-button type="submit" class="emphasized">Submit</button>\n    <button vcl-button type="button" (click)="onReset()">Reset</button>\n  </div>\n\n  <div class="value">\n    <h4>Form</h4>\n    <pre>status: {{ form.status }}</pre>\n    <pre>valid: {{ form.valid }}</pre>\n    <pre>dirty: {{ form.dirty }}</pre>\n    <pre>submitted: {{ form.submitted }}</pre>\n    <pre>touched: {{ form.touched }}</pre>\n    <pre>pristine: {{ form.pristine }}</pre>\n    <pre>errors: {{ form.errors | json }}</pre>\n    <pre>value: {{ form.value | json }}</pre>\n  </div>\n</form>\n'},2319:(p,c,t)=>{t.r(c),t.d(c,{default:()=>m});const m="import { Component, ViewChild, ViewEncapsulation } from '@angular/core';\nimport {\n  UntypedFormGroup,\n  Validators,\n  AbstractControl,\n  UntypedFormControl,\n  NgForm,\n} from '@angular/forms';\nimport {\n  NotifierService,\n  FormControlErrorStateAgent,\n  LayerConfig,\n  DateAdapter,\n} from '@vcl/ng-vcl';\n\n@Component({\n  templateUrl: 'demo.component.html',\n  styleUrls: ['demo.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class FormControlGroupDemoComponent {\n  constructor(private notifier: NotifierService, private da: DateAdapter) {}\n\n  @ViewChild('form')\n  form: NgForm;\n\n  datePattern = this.da.pattern('date');\n\n  skillPointsMax = 10;\n\n  defaultValues = {\n    level: 1,\n    leader: false,\n    hitpoints: 10,\n    strength: 3,\n    agility: 3,\n    intelligence: 3,\n    perks: [],\n  };\n\n  formGroup = new UntypedFormGroup(\n    {\n      name: new UntypedFormControl('', [\n        Validators.required,\n        Validators.minLength(2),\n      ]),\n      description: new UntypedFormControl('', []),\n      dob: new UntypedFormControl(null, [Validators.required]),\n      password: new UntypedFormControl('', [\n        Validators.required,\n        Validators.pattern(\n          '(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-zd$@$!%*?&].{8,}'\n        ),\n      ]),\n      picture: new UntypedFormControl(null, []),\n      level: new UntypedFormControl(this.defaultValues.level, []),\n      leader: new UntypedFormControl(this.defaultValues.leader, []),\n      email: new UntypedFormControl('', {\n        validators: [Validators.email],\n      }),\n      terms: new UntypedFormControl(false, [\n        control => {\n          if (!control.value) {\n            return {\n              termsDisagree: true,\n            };\n          }\n          return null;\n        },\n      ]),\n      gender: new UntypedFormControl(null, Validators.required),\n      class: new UntypedFormControl(null, [Validators.required]),\n      alignment: new UntypedFormControl(null, [Validators.required]),\n      hitpoints: new UntypedFormControl(this.defaultValues.hitpoints, [\n        Validators.min(1),\n        Validators.max(100),\n      ]),\n      strength: new UntypedFormControl(this.defaultValues.strength, [\n        Validators.min(1),\n        Validators.max(10),\n      ]),\n      agility: new UntypedFormControl(this.defaultValues.agility, [\n        Validators.min(1),\n        Validators.max(10),\n      ]),\n      intelligence: new UntypedFormControl(this.defaultValues.intelligence, [\n        Validators.min(1),\n        Validators.max(10),\n      ]),\n      perks: new UntypedFormControl(this.defaultValues.perks, [\n        this.validatePerks.bind(this),\n      ]),\n    },\n    [this.validateSkills.bind(this)]\n  );\n\n  get level() {\n    const c = this.formGroup && this.formGroup.get('level');\n    return c ? c.value : 0;\n  }\n\n  get skillPoints() {\n    const s = this.formGroup && this.formGroup.get('strength');\n    const a = this.formGroup && this.formGroup.get('agility');\n    const i = this.formGroup && this.formGroup.get('intelligence');\n    if (s && a && i) {\n      return s.value + a.value + i.value;\n    }\n    return 0;\n  }\n\n  get skillPointsAvailable() {\n    return this.skillPointsMax - this.skillPoints;\n  }\n\n  validateSkills() {\n    if (this.skillPoints > this.skillPointsMax) {\n      return {\n        skills: true,\n      };\n    }\n    return null;\n  }\n\n  validatePerks(c: AbstractControl) {\n    return Array.isArray(c.value) && c.value.length === 2\n      ? null\n      : { perks: true };\n  }\n\n  // Show only if invalid and after submitted\n  termsErrorStateAgent: FormControlErrorStateAgent = (form?, ngControl?) => {\n    return form && ngControl && ngControl.invalid && form.submitted;\n  };\n\n  onSubmit() {\n    if (this.formGroup.valid) {\n      this.notifier.success('Hero created');\n    } else {\n      this.notifier.error('Hero invalid');\n    }\n  }\n\n  onReset() {\n    this.form.resetForm(this.defaultValues);\n    this.notifier.info('Hero reset');\n  }\n\n  helpLayerConfig: LayerConfig = {\n    maxWidth: '25em',\n  };\n}\n"},7344:(p,c,t)=>{t.r(c),t.d(c,{default:()=>m});const m=".help-wrapper {\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  justify-content: space-between;\n}\n.help-wrapper > :first-child {\n  flex: 0 0 90%;\n}"}}]);