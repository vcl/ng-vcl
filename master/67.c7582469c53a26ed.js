"use strict";(self.webpackChunkng_vcl_demo=self.webpackChunkng_vcl_demo||[]).push([[67],{548:(i,t,n)=>{n.r(t),n.d(t,{default:()=>d});const d='\n\n<button vcl-button (click)="opened = !opened">Toggle drawer</button>\n\n<br><br>\n\n<vcl-drawer-container style="width: 20em; height: 20em; background-color: #b47c17">\n  <vcl-drawer [opened]="opened" style="width: 5em; background-color: #166a24" >\n    Drawer\n  </vcl-drawer>\n  Content\n</vcl-drawer-container>\n\n<br><br>\n\n<button vcl-button (click)="drawer1.toggle()">Toggle drawer</button>\n\n<br><br>\n\n<vcl-drawer-container style="width: 20em; height: 20em; background-color: #b47c17">\n  <vcl-drawer #drawer1="vclDrawer" mode="side" style="width: 5em; background-color: #166a24" >\n    Drawer\n  </vcl-drawer>\n  Content\n</vcl-drawer-container>\n\n<br><br>\n\n<button vcl-button (click)="drawer2.toggle()">Toggle drawer</button>\n\n<br><br>\n\n<vcl-drawer-container style="width: 20em; height: 20em; background-color: #b47c17">\n  <vcl-drawer #drawer2="vclDrawer" mode="over" style="width: 5em; background-color: #166a24" >\n    Drawer\n  </vcl-drawer>\n  Content\n</vcl-drawer-container>\n\n<br><br>\n'},5067:(i,t,n)=>{n.r(t),n.d(t,{DrawerDemoModule:()=>C,demo:()=>u});var d=n(8132),p=n(9042),w=n(6107),e=n(3664),o=n(2615),g=n(998),h=n(3268),D=n(2830);let f=(()=>{var c;class r{constructor(){this.opened=!0}static#e=c=()=>(this.\u0275fac=function(a){return new(a||r)},this.\u0275cmp=e.VBU({type:r,selectors:[["ng-component"]],decls:32,vars:1,consts:[["drawer1","vclDrawer"],["drawer2","vclDrawer"],["vcl-button","",3,"click"],[2,"width","20em","height","20em","background-color","#b47c17"],[2,"width","5em","background-color","#166a24",3,"opened"],["mode","side",2,"width","5em","background-color","#166a24"],["mode","over",2,"width","5em","background-color","#166a24"]],template:function(a,l){if(1&a){const s=e.RV6();e.j41(0,"button",2),e.bIt("click",function(){return o.eBV(s),o.Njj(l.opened=!l.opened)}),e.EFF(1,"Toggle drawer"),e.k0s(),e.nrm(2,"br")(3,"br"),e.j41(4,"vcl-drawer-container",3)(5,"vcl-drawer",4),e.EFF(6," Drawer "),e.k0s(),e.EFF(7," Content\n"),e.k0s(),e.nrm(8,"br")(9,"br"),e.j41(10,"button",2),e.bIt("click",function(){o.eBV(s);const m=e.sdS(16);return o.Njj(m.toggle())}),e.EFF(11,"Toggle drawer"),e.k0s(),e.nrm(12,"br")(13,"br"),e.j41(14,"vcl-drawer-container",3)(15,"vcl-drawer",5,0),e.EFF(17," Drawer "),e.k0s(),e.EFF(18," Content\n"),e.k0s(),e.nrm(19,"br")(20,"br"),e.j41(21,"button",2),e.bIt("click",function(){o.eBV(s);const m=e.sdS(27);return o.Njj(m.toggle())}),e.EFF(22,"Toggle drawer"),e.k0s(),e.nrm(23,"br")(24,"br"),e.j41(25,"vcl-drawer-container",3)(26,"vcl-drawer",6,1),e.EFF(28," Drawer "),e.k0s(),e.EFF(29," Content\n"),e.k0s(),e.nrm(30,"br")(31,"br")}2&a&&(e.R7$(5),e.Y8G("opened",l.opened))},dependencies:[w.e7Q,g.Q,w.zqe,h.D,D.Y],encapsulation:2}))}return c(),r})();const k="# vcl-drawer\n\nSliding drawer with content area. In closed state, only the content area is visible.\n\n## Usage\n\n```html\n<vcl-drawer-container>\n  <vcl-drawer mode=\"side\"> Drawer </vcl-drawer>\n  Content\n</vcl-drawer-container>\n```\n\n### Drawer modes\n\n`side`: Drawer appears besides the content. The content is pushed away and shrinked to make space for the drawer.\n`over`: Drawer floats over the content. The content is covered by a backdrop.\n\n### Opening and closing the drawer\n\nA drawer can be opened and closed with the `opened` property.\n\nThe opened state can also be changed via the drawer instance.\nIt exposes a `open()`, `close()` and `toggle()` method.\n\n```html\n<vcl-drawer-container #drawer=\"vclDrawer\">\n  <vcl-drawer>...</vcl-drawer>\n  ...\n</vcl-drawer-container>\n<button (click)=\"drawer.toggle()\">Toggle</button>\n```\n\n### API\n\n#### Attributes\n\n| Name       | Type              | Default | Description                                                                            |\n| ---------- | ----------------- | ------- | -------------------------------------------------------------------------------------- |\n| `position` | 'left' \\| 'right' | 'left'  | Drawer position                                                                        |\n| `mode`     | 'side' \\| 'over'  | 'side'  | Drawer mode                                                                            |\n| `opened`   | boolean           | `false` | Drawer is opened. Default value is `true` for `side` mode and `false` for `over` mode. |\n";function u(){return{label:"Drawer",tabs:{Demo:f,"README.md":{type:"md",content:k},"demo.component.html":{type:"html",content:n(548)},"demo.component.ts":{type:"ts",content:n(5812)}}}}let C=(()=>{var c;class r{static#e=c=()=>(this.\u0275fac=function(a){return new(a||r)},this.\u0275mod=e.$C({type:r}),this.\u0275inj=o.G2t({imports:[d.iI.forChild([{path:"",component:p.D,data:{demo:u}}])]}))}return c(),r})()},5812:(i,t,n)=>{n.r(t),n.d(t,{default:()=>d});const d="import { Component } from '@angular/core';\nimport { VCLButtonModule, VCLDrawerModule } from '@vcl/ng-vcl';\n\n@Component({\n  templateUrl: 'demo.component.html',\n  imports: [VCLButtonModule, VCLDrawerModule],\n})\nexport class DrawerDemoComponent {\n  opened = true;\n}\n"}}]);