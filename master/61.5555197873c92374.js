"use strict";(self.webpackChunkng_vcl_demo=self.webpackChunkng_vcl_demo||[]).push([[61],{2061:(m,n,t)=>{t.r(n),t.d(n,{PopoverDemoModule:()=>x,demo:()=>u});var c=t(6814),h=t(2911),d=t(2916),g=t(2320),o=t(5879),f=t(4770),P=t(5296);function b(e,r){if(1&e){const p=o.EpF();o.TgZ(0,"div",8),o._uU(1," Popover is connected to the target "),o._UZ(2,"br"),o.TgZ(3,"button",9),o.NdJ("click",function(){o.CHM(p),o.oxw();const s=o.MAs(9);return o.KtG(s.open())}),o._uU(4," Show additional Popover "),o.qZA(),o._uU(5," \xa0 "),o.TgZ(6,"button",9),o.NdJ("click",function(){o.CHM(p),o.oxw();const s=o.MAs(7);return o.KtG(s.close())}),o._uU(7,"Close Popovers"),o.qZA()()}}function C(e,r){1&e&&(o.TgZ(0,"div",10),o._uU(1," Popover is connected to the target"),o._UZ(2,"br"),o.qZA())}const y=function(){return{originX:"start",originY:"top",overlayX:"start",overlayY:"bottom"}},T=function(e){return[e]};let D=(()=>{var e;class r{}return(e=r).\u0275fac=function(l){return new(l||e)},e.\u0275cmp=o.Xpm({type:e,selectors:[["ng-component"]],decls:10,vars:9,consts:[[2,"min-height","500px","width","100%"],["vcl-button","",3,"selectable","selected","click"],[2,"position","absolute","top","300px","left","200px","padding","10px","border","3px double green"],["target",""],["vclPopover","",3,"target","afterClose"],["popover1","vclPopover"],["vclPopover","",3,"closeOnOffClick","target","positions"],["popover2","vclPopover"],[2,"width","400px"],["vcl-button","",3,"click"],[2,"width","300px","height","50px"]],template:function(l,s){if(1&l){const i=o.EpF();o.TgZ(0,"div",0)(1,"button",1),o.NdJ("click",function(){o.CHM(i);const v=o.MAs(7);return o.KtG(v.toggle())}),o._uU(2," Toggle Popover "),o.qZA(),o.TgZ(3,"div",2,3),o._uU(5," The target "),o.qZA()(),o.YNc(6,b,8,0,"ng-template",4,5,o.W1O),o.NdJ("afterClose",function(){o.CHM(i);const v=o.MAs(9);return o.KtG(v.close())}),o.YNc(8,C,3,0,"ng-template",6,7,o.W1O)}if(2&l){const i=o.MAs(4),a=o.MAs(7);o.xp6(1),o.Q6J("selectable",!0)("selected",a.visible),o.xp6(5),o.Q6J("target",i),o.xp6(2),o.Q6J("closeOnOffClick",!0)("target",i)("positions",o.VKq(7,T,o.DdM(6,y)))}},dependencies:[f.k,P.r],encapsulation:2}),r})();const A='# vcl-popover\n\nA popover is an overlay floating at the position of the target element.\n\n## Usage\n\n```html\n<div #myTarget>any dom element can be the target</div>\n<button (click)="popover.toggle()">\n  <vcl-popover\n    #popover="vclPopover"\n    [target]="myTarget"\n    [positions]="myPositions">\n    Popover-Content\n  </vcl-popover>\n</button>\n```\n\n### API\n\n#### Attributes\n\n| Name              | Type                                                                               | Default | Description                                          |\n| ----------------- | ---------------------------------------------------------------------------------- | ------- | ---------------------------------------------------- |\n| `target`          | ElementRef \\| HTMLElement                                                          |         | the target must be an ElementRef instance            |\n| `positions`       | [ConnectedPosition](https://material.angular.io/cdk/overlay/api#ConnectedPosition) |         | @angular/cdk OverlayPosition array                   |\n| `scrollStrategy`  | [ScrollStrategy](https://material.angular.io/cdk/overlay/api#ScrollStrategy)       |         | @angular/cdk ScrollStrategy                          |\n| `closeOnOffClick` | boolean                                                                            | false   | Close popover when on a click outside of the popover |\n| `visible` _(1)_   | boolean                                                                            | false   | the popover is hidden if false                       |\n\n#### Methods\n\n| Name     | Attributes | Description                                 |\n| -------- | ---------- | ------------------------------------------- |\n| `open`   |            | will show the popover                       |\n| `close`  |            | will hide the popover                       |\n| `toggle` |            | will show when hidden and hide when visible |\n\n_(1) Supports Two-way binding_\n';function u(){return{label:"Popover",tabs:{Demo:D,"README.md":{type:"md",content:A},"demo.component.html":{type:"html",content:t(7693)},"demo.component.ts":{type:"ts",content:t(4894)}}}}let x=(()=>{var e;class r{}return(e=r).\u0275fac=function(l){return new(l||e)},e.\u0275mod=o.oAB({type:e}),e.\u0275inj=o.cJS({imports:[c.ez,g.l,d.NGg,d.V4c,h.Bz.forChild([{path:"",component:g.z,data:{demo:u}}])]}),r})()},7693:(m,n,t)=>{t.r(n),t.d(n,{default:()=>c});const c='<div style="min-height: 500px; width: 100%">\n  <button\n    vcl-button\n    [selectable]="true"\n    [selected]="popover1.visible"\n    (click)="popover1.toggle()">\n    Toggle Popover\n  </button>\n  <div\n    #target\n    style="\n      position: absolute;\n      top: 300px;\n      left: 200px;\n      padding: 10px;\n      border: 3px double green;\n    ">\n    The target\n  </div>\n</div>\n\n<ng-template\n  vclPopover\n  #popover1="vclPopover"\n  [target]="target"\n  (afterClose)="popover2.close()">\n  <div style="width: 400px">\n    Popover is connected to the target <br />\n    <button vcl-button (click)="popover2.open()">\n      Show additional Popover\n    </button>\n    &nbsp;\n    <button vcl-button (click)="popover1.close()">Close Popovers</button>\n  </div>\n</ng-template>\n\n<ng-template\n  vclPopover\n  #popover2="vclPopover"\n  [closeOnOffClick]="true"\n  [target]="target"\n  [positions]="[\n    {\n      originX: \'start\',\n      originY: \'top\',\n      overlayX: \'start\',\n      overlayY: \'bottom\'\n    }\n  ]">\n  <div style="width: 300px; height: 50px">\n    Popover is connected to the target<br />\n  </div>\n</ng-template>\n'},4894:(m,n,t)=>{t.r(n),t.d(n,{default:()=>c});const c="import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: 'demo.component.html',\n})\nexport class PopoverDemoComponent {}\n"}}]);