"use strict";(self.webpackChunkng_vcl_demo=self.webpackChunkng_vcl_demo||[]).push([[315],{6315:(p,o,l)=>{l.r(o),l.d(o,{InputDemoModule:()=>E,demo:()=>s});var u=l(177),r=l(4341),m=l(3339),i=l(5191),v=l(6748),n=l(3953),f=l(2890),g=l(8112),b=l(2781),h=l(885),I=l(6374),x=l(55),D=l(9052),R=l(4286);let C=(()=>{class t{constructor(){this.data1="",this.data2=""}static#n=this.\u0275fac=function(a){return new(a||t)};static#l=this.\u0275cmp=n.VBU({type:t,selectors:[["ng-component"]],decls:43,vars:8,consts:[["vclInput","",3,"ngModelChange","ngModel"],["vclInput","","autoselect","true"],["vclPrepend","","icon","mdi:email"],["vclAppend","","vcl-button","","square",""],["icon","mdi:close"],["vclInput","","value","readonly",3,"readonly"],["vclInput","","value","disabled",3,"disabled"],[1,"auto-height"],["vclInput","","rows","3"],["vclInput","",3,"autogrow","minRows","maxRows"],["vclInput","",3,"disabled"]],template:function(a,c){1&a&&(n.j41(0,"vcl-form-control-group")(1,"vcl-label"),n.EFF(2,"Basic input"),n.k0s(),n.j41(3,"vcl-input-field")(4,"input",0),n.mxI("ngModelChange",function(e){return n.DH7(c.data1,e)||(c.data1=e),e}),n.k0s()()(),n.j41(5,"vcl-form-control-group")(6,"vcl-label"),n.EFF(7,"Input (autoselect)"),n.k0s(),n.j41(8,"vcl-input-field"),n.nrm(9,"input",1),n.k0s()(),n.j41(10,"vcl-form-control-group")(11,"vcl-label"),n.EFF(12,"Email"),n.k0s(),n.j41(13,"vcl-input-field"),n.nrm(14,"vcl-icon",2),n.j41(15,"input",0),n.mxI("ngModelChange",function(e){return n.DH7(c.data2,e)||(c.data2=e),e}),n.k0s(),n.j41(16,"button",3),n.nrm(17,"vcl-icon",4),n.k0s()()(),n.j41(18,"vcl-form-control-group")(19,"vcl-label"),n.EFF(20,"Readonly input"),n.k0s(),n.j41(21,"vcl-input-field"),n.nrm(22,"input",5),n.k0s()(),n.j41(23,"vcl-form-control-group")(24,"vcl-label"),n.EFF(25,"Disabled input"),n.k0s(),n.j41(26,"vcl-input-field"),n.nrm(27,"input",6),n.k0s()(),n.j41(28,"vcl-form-control-group")(29,"vcl-label"),n.EFF(30,"textarea"),n.k0s(),n.j41(31,"vcl-input-field",7),n.nrm(32,"textarea",8),n.k0s()(),n.j41(33,"vcl-form-control-group")(34,"vcl-label"),n.EFF(35,"Autogrowing textarea"),n.k0s(),n.j41(36,"vcl-input-field",7),n.nrm(37,"textarea",9),n.k0s()(),n.j41(38,"vcl-form-control-group")(39,"vcl-label"),n.EFF(40,"Disabled textarea"),n.k0s(),n.j41(41,"vcl-input-field",7),n.nrm(42,"textarea",10),n.k0s()()),2&a&&(n.R7$(4),n.R50("ngModel",c.data1),n.R7$(11),n.R50("ngModel",c.data2),n.R7$(7),n.Y8G("readonly",!0),n.R7$(5),n.Y8G("disabled",!0),n.R7$(10),n.Y8G("autogrow",!0)("minRows",5)("maxRows",10),n.R7$(5),n.Y8G("disabled",!0))},dependencies:[r.me,r.BC,r.vS,f.k,g.i,b._,h.W,I.C3,x.Uf,D.R,R.Q],encapsulation:2})}return t})();const j='# input\n\nEnhanced text input\n\n## Usage\n\n```js\nimport { VCLInputModule } from \'@vcl/ng-vcl\';\n\n@NgModule({\n  imports: [ VCLInputModule ],\n  ...\n})\nexport class AppComponent {}\n```\n\n```html\n<vcl-form-control-group>\n  <vcl-label>Basic input</vcl-label>\n  <vcl-input-field>\n    <input vclInput [(ngModel)]="data1" />\n  </vcl-input-field>\n</vcl-form-control-group>\n\n<vcl-form-control-group>\n  <vcl-label>Basic textarea</vcl-label>\n  <vcl-input-field>\n    <textarea vclInput [(ngModel)]="data1" [autogrow]="true" [minRows]="5" [maxRows]="10"></textarea>\n  </vcl-input-field>\n</vcl-form-control-group>\n\n```\n\n### API\n\n#### input[vclInput] attributes\n\nName            | Type    | Default | Description\n--------------- | ------- | ------- | -----------------------------------------------\n`disabled`      | boolean | false   | Disables the input when true\n`autoselect`    | boolean | false   | Selects text on focus\n\n\n#### textarea[vclInput] Attributes\n\n| Name                | Type        | Default            | Description\n| ------------        | ----------- | ------------------ |--------------\n| `autogrow`          | boolean     | false              | Adjusts the `rows` attribute so it matches the current values number of lines\n| `minRows`           | number      |                    | The min value for `rows` when using autogrow\n| `maxRows`           | number      |                    | The max value for `rows` when using autogrow\n| `autoselect`        | boolean     | false              | Selects text on focus\n';function s(){return{label:"Input",tabs:{Demo:C,"README.md":{type:"md",content:j},"demo.component.html":{type:"html",content:l(4537)},"demo.component.ts":{type:"ts",content:l(5157)}}}}let E=(()=>{class t{static#n=this.\u0275fac=function(a){return new(a||t)};static#l=this.\u0275mod=n.$C({type:t});static#t=this.\u0275inj=n.G2t({imports:[u.MD,r.YN,v.q,i.AeE,i.j2$,i.e7Q,m.iI.forChild([{path:"",component:v.D,data:{demo:s}}])]})}return t})()},4537:(p,o,l)=>{l.r(o),l.d(o,{default:()=>u});const u='<vcl-form-control-group>\n  <vcl-label>Basic input</vcl-label>\n  <vcl-input-field>\n    <input vclInput [(ngModel)]="data1" />\n  </vcl-input-field>\n</vcl-form-control-group>\n\n<vcl-form-control-group>\n  <vcl-label>Input (autoselect)</vcl-label>\n  <vcl-input-field>\n    <input vclInput autoselect=true />\n  </vcl-input-field>\n</vcl-form-control-group>\n\n<vcl-form-control-group>\n  <vcl-label>Email</vcl-label>\n  <vcl-input-field>\n    <vcl-icon vclPrepend icon="mdi:email"></vcl-icon>\n    <input vclInput [(ngModel)]="data2" />\n    <button vclAppend vcl-button square>\n      <vcl-icon icon="mdi:close"></vcl-icon>\n    </button>\n  </vcl-input-field>\n</vcl-form-control-group>\n\n<vcl-form-control-group>\n  <vcl-label>Readonly input</vcl-label>\n  <vcl-input-field>\n    <input vclInput value=\'readonly\' [readonly]="true" />\n  </vcl-input-field>\n</vcl-form-control-group>\n\n<vcl-form-control-group>\n  <vcl-label>Disabled input</vcl-label>\n  <vcl-input-field>\n    <input vclInput value=\'disabled\' [disabled]="true" />\n  </vcl-input-field>\n</vcl-form-control-group>\n\n<vcl-form-control-group>\n  <vcl-label>textarea</vcl-label>\n  <vcl-input-field class="auto-height">\n    <textarea vclInput rows="3"></textarea>\n  </vcl-input-field>\n</vcl-form-control-group>\n\n<vcl-form-control-group>\n  <vcl-label>Autogrowing textarea</vcl-label>\n  <vcl-input-field class="auto-height">\n    <textarea vclInput [autogrow]="true" [minRows]="5" [maxRows]="10"></textarea>\n  </vcl-input-field>\n</vcl-form-control-group>\n\n<vcl-form-control-group>\n  <vcl-label>Disabled textarea</vcl-label>\n  <vcl-input-field class="auto-height">\n    <textarea vclInput [disabled]="true"></textarea>\n  </vcl-input-field>\n</vcl-form-control-group>\n'},5157:(p,o,l)=>{l.r(o),l.d(o,{default:()=>u});const u="import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: 'demo.component.html',\n})\nexport class InputDemoComponent {\n  data1 = '';\n  data2 = '';\n}\n"}}]);