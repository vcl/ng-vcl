"use strict";(self.webpackChunkng_vcl_demo=self.webpackChunkng_vcl_demo||[]).push([[146],{507:(s,l,t)=>{t.r(l),t.d(l,{default:()=>a});const a="import { Component, ViewEncapsulation } from '@angular/core';\nimport { VCLIconModule, VCLPanelModule } from '@vcl/ng-vcl';\n\n@Component({\n  templateUrl: 'demo.component.html',\n  encapsulation: ViewEncapsulation.None,\n  imports: [VCLPanelModule, VCLIconModule],\n})\nexport class PanelDemoComponent {\n  constructor() {}\n}\n"},6146:(s,l,t)=>{t.r(l),t.d(l,{PanelDemoModule:()=>F,demo:()=>r});var a=t(8132),d=t(9042),v=t(6107),n=t(3664),u=t(6692),m=t(998),P=t(2024),i=t(5566);let g=(()=>{var c;class e{constructor(){}static#n=c=()=>(this.\u0275fac=function(o){return new(o||e)},this.\u0275cmp=n.VBU({type:e,selectors:[["ng-component"]],decls:25,vars:1,consts:[[1,"row","align-items-center","py-1"],[3,"showCloseButton"],[1,"row","gutterx-3","align-items-center"],["icon","vcl:alert-circle",1,"scale300p"],["type","button","vcl-button","","vclPanelFooterButton","",1,"transparent","outline"],["type","button","vcl-button","","vclPanelFooterButton","",1,"emphasized"],["type","warning"]],template:function(o,f){1&o&&(n.j41(0,"vcl-panel")(1,"vcl-panel-title"),n.EFF(2,"Panel Title"),n.k0s(),n.EFF(3," Panel Content "),n.j41(4,"vcl-panel-footer")(5,"div",0),n.EFF(6," Panel Footer "),n.k0s()()(),n.j41(7,"vcl-panel-dialog",1)(8,"vcl-panel-title"),n.EFF(9,"Panel Title"),n.k0s(),n.j41(10,"div",2),n.nrm(11,"vcl-icon",3),n.j41(12,"div"),n.EFF(13,"Panel Content"),n.k0s()(),n.j41(14,"button",4),n.EFF(15," Cancel "),n.k0s(),n.j41(16,"button",5),n.EFF(17," Save Changes "),n.k0s()(),n.j41(18,"vcl-panel",6)(19,"vcl-panel-title"),n.EFF(20,"Panel Title"),n.k0s(),n.j41(21,"div",2),n.nrm(22,"vcl-icon",3),n.j41(23,"div"),n.EFF(24,"Panel with semantic coloring"),n.k0s()()()),2&o&&(n.R7$(7),n.Y8G("showCloseButton",!0))},dependencies:[v.Q$9,u.R,m.Q,P.g,i.BF,i.EA,i.f8,i.Qq,v.j2$],encapsulation:2}))}return c(),e})();const C='# vcl-panel\n\nA panel consisting a body, header and footer. All elements are optional.\nThere is a dialog variant, optimized for modal dialogs.\n\n## Usage\n\n```js\nimport { VCLPanelModule } from \'@vcl/ng-vcl\';\n\n@Component({\n  imports: [\n    VCLPanelModule\n  ],\n  ...\n})\nexport class AppComponent {}\n```\n\n```html\n<vcl-panel>\n  <vcl-panel-title>Panel Title</vcl-panel-title>\n  Panel Content\n  <vcl-panel-footer>Panel Footer</vcl-panel-footer>\n</vcl-panel>\n\n<vcl-panel-dialog [showCloseButton]="true">\n  <vcl-panel-title>Panel Title</vcl-panel-title>\n  <div class="row gutterx-3 align-items-center">\n    <vcl-icon icon="vcl:alert-circle" class="scale300p"></vcl-icon>\n    <div>Panel Content</div>\n  </div>\n  <button\n    type="button"\n    vcl-button\n    vclPanelFooterButton\n    class="transparent outline">\n    Cancel\n  </button>\n  <button type="button" vcl-button vclPanelFooterButton class="emphasized">\n    Save Changes\n  </button>\n</vcl-panel-dialog>\n```\n\n### API\n\n#### Attributes\n\n| Name              | Type                                                    | Default | Description                        |\n| ----------------- | ------------------------------------------------------- | ------- | ---------------------------------- |\n| `showCloseButton` | boolean                                                 | false   | Shows a close button in the header |\n| `type`            | \'success\' \\| \'danger\' \\| \'warning\' \\| \'error\' \\| \'info\' |         | Semantic coloring                  |\n\n#### Events\n\n| Name    | Description                            |\n| ------- | -------------------------------------- |\n| `close` | Fired when the close button is clicked |\n';var h=t(2615);function r(){return{label:"Panel",tabs:{Demo:g,"README.md":{type:"md",content:C},"demo.component.html":{type:"html",content:t(6675)},"demo.component.ts":{type:"ts",content:t(507)}}}}let F=(()=>{var c;class e{static#n=c=()=>(this.\u0275fac=function(o){return new(o||e)},this.\u0275mod=n.$C({type:e}),this.\u0275inj=h.G2t({imports:[a.iI.forChild([{path:"",component:d.D,data:{demo:r}}])]}))}return c(),e})()},6675:(s,l,t)=>{t.r(l),t.d(l,{default:()=>a});const a='<vcl-panel>\n  <vcl-panel-title>Panel Title</vcl-panel-title>\n  Panel Content\n  <vcl-panel-footer>\n    <div class="row align-items-center py-1">\n      Panel Footer\n    </div>\n  </vcl-panel-footer>\n</vcl-panel>\n\n<vcl-panel-dialog [showCloseButton]="true">\n  <vcl-panel-title>Panel Title</vcl-panel-title>\n  <div class="row gutterx-3 align-items-center">\n    <vcl-icon icon="vcl:alert-circle" class="scale300p"></vcl-icon>\n    <div>Panel Content</div>\n  </div>\n  <button type="button" vcl-button vclPanelFooterButton class="transparent outline">\n    Cancel\n  </button>\n  <button type="button" vcl-button vclPanelFooterButton class="emphasized">\n    Save Changes\n  </button>\n</vcl-panel-dialog>\n\n<vcl-panel type="warning">\n  <vcl-panel-title>Panel Title</vcl-panel-title>\n  <div class="row gutterx-3 align-items-center">\n    <vcl-icon icon="vcl:alert-circle" class="scale300p"></vcl-icon>\n    <div>Panel with semantic coloring</div>\n  </div>\n</vcl-panel>\n'}}]);